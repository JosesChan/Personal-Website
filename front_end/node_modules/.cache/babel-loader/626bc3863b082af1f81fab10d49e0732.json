{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joses\\\\Documents\\\\GitHub\\\\Personal-Website\\\\front_end\\\\src\\\\components\\\\edit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport TextButton from './TextButton';\nimport TextField from './TextField';\nimport Radio from './Radio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level\n    }; // This will send a post request to update the data in the database.\n\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          element_id: \"name\",\n          element_text: \"Name\",\n          placeholder: \"Joe\",\n          value_input: form.name,\n          statehook: e => {\n            updateForm({\n              name: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          element_id: \"position\",\n          element_text: \"Position\",\n          placeholder: \"Manager\",\n          value_input: form.position,\n          statehook: e => {\n            updateForm({\n              position: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-6\",\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          element_id: \"positionIntern\",\n          type: \"radio\",\n          value_input: \"Intern\",\n          element_name: \"positionOptions\",\n          checked_if: form.level === \"Intern\",\n          statehook: e => {\n            updateForm({\n              level: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n          element_id: \"positionIntern\",\n          type: \"radio\",\n          value_input: \"Junior\",\n          element_name: \"positionOptions\",\n          checked_if: form.level === \"Junior\",\n          statehook: e => {\n            updateForm({\n              level: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n          element_id: \"positionIntern\",\n          type: \"radio\",\n          value_input: \"Senior\",\n          element_name: \"positionOptions\",\n          checked_if: form.level === \"Senior\",\n          statehook: e => {\n            updateForm({\n              level: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(TextButton, {\n          type: \"submit\",\n          prompt: \"Edit user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Edit, \"yr4eHozueGM5/yvxpofe1+IwfbE=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","TextButton","TextField","Radio","Edit","form","setForm","name","position","level","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedPerson","method","body","JSON","stringify","headers","target"],"sources":["C:/Users/Joses/Documents/GitHub/Personal-Website/front_end/src/components/edit.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\n \r\nimport TextButton from './TextButton';\r\nimport TextField from './TextField';\r\nimport Radio from './Radio';\r\n\r\nexport default function Edit() {\r\n const [form, setForm] = useState({\r\n   name: \"\",\r\n   position: \"\",\r\n   level: \"\",\r\n   records: [],\r\n });\r\n const params = useParams();\r\n const navigate = useNavigate();\r\n \r\n useEffect(() => {\r\n   async function fetchData() {\r\n     const id = params.id.toString();\r\n     const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\r\n \r\n     if (!response.ok) {\r\n       const message = `An error has occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n \r\n     const record = await response.json();\r\n     if (!record) {\r\n       window.alert(`Record with id ${id} not found`);\r\n       navigate(\"/\");\r\n       return;\r\n     }\r\n \r\n     setForm(record);\r\n   }\r\n \r\n   fetchData();\r\n \r\n   return;\r\n }, [params.id, navigate]);\r\n \r\n // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n \r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n   const editedPerson = {\r\n     name: form.name,\r\n     position: form.position,\r\n     level: form.level,\r\n   };\r\n \r\n   // This will send a post request to update the data in the database.\r\n   await fetch(`http://localhost:5000/update/${params.id}`, {\r\n     method: \"POST\",\r\n     body: JSON.stringify(editedPerson),\r\n     headers: {\r\n       'Content-Type': 'application/json'\r\n     },\r\n   });\r\n \r\n   navigate(\"/\");\r\n }\r\n \r\n // This following section will display the form that takes input from the user to update the data.\r\n return (\r\n   <div>\r\n     <h3>Update Record</h3>\r\n     <form onSubmit={onSubmit}>\r\n            <div className=\"mt-4\">\r\n              <TextField type=\"text\" element_id=\"name\" element_text=\"Name\" placeholder=\"Joe\" value_input={form.name} statehook={(e) => {updateForm({ name: e.target.value })}} />\r\n              <TextField type=\"text\" element_id=\"position\" element_text=\"Position\" placeholder=\"Manager\" value_input={form.position} statehook={(e) => {updateForm({ position: e.target.value })}} />\r\n            </div>\r\n            <div className=\"my-6\">\r\n              <Radio \r\n                element_id=\"positionIntern\"\r\n                type=\"radio\" \r\n                value_input=\"Intern\"\r\n                element_name=\"positionOptions\"\r\n                checked_if={form.level === \"Intern\"} \r\n                statehook={(e) => {updateForm({ level: e.target.value })}} \r\n                />\r\n              \r\n                \r\n              <Radio \r\n                element_id=\"positionIntern\"\r\n                type=\"radio\" \r\n                value_input=\"Junior\"\r\n                element_name=\"positionOptions\"\r\n                checked_if={form.level === \"Junior\"} \r\n                statehook={(e) => {updateForm({ level: e.target.value })}} \r\n                />\r\n              \r\n              <Radio \r\n                element_id=\"positionIntern\"\r\n                type=\"radio\" \r\n                value_input=\"Senior\"\r\n                element_name=\"positionOptions\"\r\n                checked_if={form.level === \"Senior\"} \r\n                statehook={(e) => {updateForm({ level: e.target.value })}} \r\n                />\r\n       </div>\r\n \r\n       <div className=\"form-group\">\r\n          <TextButton type=\"submit\" prompt=\"Edit user\"/>\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}