{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joses\\\\Documents\\\\GitHub\\\\Personal-Website\\\\front_end\\\\src\\\\components\\\\recordList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // Set layout for table\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props =>\n/*#__PURE__*/\n// table row and table data cell\n_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.level\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.record._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteRecord(props.record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this); // Using a GET method, retrieve all records in the database\n\n\n_c = Record;\nexport default function RecordList() {\n  _s();\n\n  //\n  const [records, setRecords] = useState([]); // This method fetches the records from the database.\n\n  useEffect(() => {\n    // create an asyrnchronous function in effect hook\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`); // If theres a problem, create an alert window with the error message\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      } // update records with statehook\n\n\n      const records = await response.json();\n      setRecords(records);\n    } // use asynchronous function that was previously made\n\n\n    getRecords();\n    return;\n  }, [records.length]); // data fetching of length, for usage outside of useEffect \n  // This method will delete a record\n\n  async function deleteRecord(id) {\n    // wait until fetch promise has arisen\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    }); // update records without \"deleted\" element\n\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  } // This method will map out the records on the table\n\n\n  function recordList() {\n    // map state variable with record arrow function\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record,\n        deleteRecord: () => deleteRecord(record._id)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n\n_c2 = RecordList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Record","props","record","name","position","level","_id","deleteRecord","RecordList","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","id","method","newRecords","filter","el","recordList","map","marginTop"],"sources":["C:/Users/Joses/Documents/GitHub/Personal-Website/front_end/src/components/recordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n// Set layout for table\r\nconst Record = (props) => (\r\n  // table row and table data cell\r\n  <tr>\r\n    <td>{props.record.name}</td>\r\n    <td>{props.record.position}</td>\r\n    <td>{props.record.level}</td>\r\n    <td>\r\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n      <button className=\"btn btn-link\" onClick={() => { props.deleteRecord(props.record._id); }}>\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\n// Using a GET method, retrieve all records in the database\r\nexport default function RecordList() {\r\n  //\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // This method fetches the records from the database.\r\n  useEffect(() => {\r\n\r\n    // create an asyrnchronous function in effect hook\r\n    async function getRecords() {\r\n      const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n      // If theres a problem, create an alert window with the error message\r\n      if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      // update records with statehook\r\n      const records = await response.json();\r\n      setRecords(records);\r\n    }\r\n\r\n    // use asynchronous function that was previously made\r\n    getRecords();\r\n\r\n    return;\r\n  }, [records.length]); // data fetching of length, for usage outside of useEffect \r\n\r\n  // This method will delete a record\r\n  async function deleteRecord(id) {\r\n    // wait until fetch promise has arisen\r\n    await fetch(`http://localhost:5000/${id}`, {\r\n      method: \"DELETE\"\r\n    });\r\n\r\n    // update records without \"deleted\" element\r\n    const newRecords = records.filter((el) => el._id !== id);\r\n    setRecords(newRecords);\r\n  }\r\n\r\n  // This method will map out the records on the table\r\n  function recordList() {\r\n    // map state variable with record arrow function\r\n    return records.map((record) => {\r\n      return (\r\n        <Record\r\n          record={record}\r\n          deleteRecord={() => deleteRecord(record._id)}\r\n          key={record._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  // This following section will display the table with the records of individuals.\r\n  return (\r\n    <div>\r\n      <h3>Record List</h3>\r\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Position</th>\r\n            <th>Level</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{recordList()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}