{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joses\\\\Documents\\\\GitHub\\\\Personal-Website\\\\front_end\\\\src\\\\components\\\\edit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport ContainerText from './ContainerText';\nimport TextButton from './TextButton';\nimport TextField from './TextField';\nimport Radio from './Radio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/Record\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level\n    }; // This will send a post request to update the data in the database.\n\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ContainerText, {\n      inputHead: \"Update Record\",\n      inputText: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            element_id: \"name\",\n            element_text: \"Name\",\n            placeholder: \"Joe\",\n            value_input: form.name,\n            statehook: e => {\n              updateForm({\n                name: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            element_id: \"position\",\n            element_text: \"Position\",\n            placeholder: \"Manager\",\n            value_input: form.position,\n            statehook: e => {\n              updateForm({\n                position: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-6\",\n          children: [/*#__PURE__*/_jsxDEV(Radio, {\n            element_id: \"positionIntern\",\n            type: \"radio\",\n            value_input: \"Intern\",\n            element_name: \"positionOptions\",\n            checked_if: form.level === \"Intern\",\n            statehook: e => {\n              updateForm({\n                level: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            element_id: \"positionIntern\",\n            type: \"radio\",\n            value_input: \"Junior\",\n            element_name: \"positionOptions\",\n            checked_if: form.level === \"Junior\",\n            statehook: e => {\n              updateForm({\n                level: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            element_id: \"positionIntern\",\n            type: \"radio\",\n            value_input: \"Senior\",\n            element_name: \"positionOptions\",\n            checked_if: form.level === \"Senior\",\n            statehook: e => {\n              updateForm({\n                level: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextButton, {\n            type: \"submit\",\n            prompt: \"Edit user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"yJlUZlyyTGOtzeEm3fh3M9BjJrQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ContainerText","TextButton","TextField","Radio","Edit","form","setForm","name","position","level","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedPerson","method","body","JSON","stringify","headers","target"],"sources":["C:/Users/Joses/Documents/GitHub/Personal-Website/front_end/src/components/edit.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport ContainerText from './ContainerText';\r\nimport TextButton from './TextButton';\r\nimport TextField from './TextField';\r\nimport Radio from './Radio';\r\n\r\nexport default function Edit() {\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    position: \"\",\r\n    level: \"\",\r\n    records: [],\r\n  });\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id.toString();\r\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const record = await response.json();\r\n      if (!record) {\r\n        window.alert(`Record with id ${id} not found`);\r\n        navigate(\"/Record\");\r\n        return;\r\n      }\r\n\r\n      setForm(record);\r\n    }\r\n\r\n    fetchData();\r\n\r\n    return;\r\n  }, [params.id, navigate]);\r\n\r\n  // These methods will update the state properties.\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    const editedPerson = {\r\n      name: form.name,\r\n      position: form.position,\r\n      level: form.level,\r\n    };\r\n\r\n    // This will send a post request to update the data in the database.\r\n    await fetch(`http://localhost:5000/update/${params.id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(editedPerson),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    });\r\n\r\n    navigate(\"/\");\r\n  }\r\n\r\n  // This following section will display the form that takes input from the user to update the data.\r\n  return (\r\n    <div>\r\n      <ContainerText inputHead=\"Update Record\"\r\n        inputText={\r\n          <form onSubmit={onSubmit}>\r\n            <div className=\"mt-4\">\r\n              <TextField type=\"text\" element_id=\"name\" element_text=\"Name\" placeholder=\"Joe\" value_input={form.name} statehook={(e) => { updateForm({ name: e.target.value }) }} />\r\n              <TextField type=\"text\" element_id=\"position\" element_text=\"Position\" placeholder=\"Manager\" value_input={form.position} statehook={(e) => { updateForm({ position: e.target.value }) }} />\r\n            </div>\r\n            <div className=\"my-6\">\r\n              <Radio\r\n                element_id=\"positionIntern\"\r\n                type=\"radio\"\r\n                value_input=\"Intern\"\r\n                element_name=\"positionOptions\"\r\n                checked_if={form.level === \"Intern\"}\r\n                statehook={(e) => { updateForm({ level: e.target.value }) }}\r\n              />\r\n\r\n\r\n              <Radio\r\n                element_id=\"positionIntern\"\r\n                type=\"radio\"\r\n                value_input=\"Junior\"\r\n                element_name=\"positionOptions\"\r\n                checked_if={form.level === \"Junior\"}\r\n                statehook={(e) => { updateForm({ level: e.target.value }) }}\r\n              />\r\n\r\n              <Radio\r\n                element_id=\"positionIntern\"\r\n                type=\"radio\"\r\n                value_input=\"Senior\"\r\n                element_name=\"positionOptions\"\r\n                checked_if={form.level === \"Senior\"}\r\n                statehook={(e) => { updateForm({ level: e.target.value }) }}\r\n              />\r\n              <TextButton type=\"submit\" prompt=\"Edit user\" />\r\n            </div>\r\n          </form>\r\n        } />\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}