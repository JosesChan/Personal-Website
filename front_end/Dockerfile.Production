# Stage 1: Build React App
# Official node image
FROM node:latest as build

# Setting the working directory to "/front_end/"
WORKDIR /front_end

ENV NODE_OPTIONS --openssl-legacy-provider

# Copies the package.json and package-lock.json file into "/front_end/" 
COPY package*.json /front_end/

# Install dependencies
RUN npm install -D tailwindcss@latest postcss@latest autoprefixer@latest cssnano@latest cross-env@latest vite-plugin-html@latest @craco/craco use-local-storage

# Copies the entire front end into "/front_end" Docker environment
COPY . /front_end/

EXPOSE 3000

# Run for development environment
# RUN ["npm", "start"]

# Run to build and use production environment
RUN ["npm", "run", "build"]


# Stage 2: Nginx as a proxy & static file server
FROM nginx:alpine

RUN rm /etc/nginx/conf.d/default.conf

COPY --from=build /front_end/build/ /usr/share/nginx/html/

COPY --from=build /front_end/docker-setup/nginx/default.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

RUN adduser -D -s /bin/bash nonroot

RUN chown -R nonroot:nonroot /etc/nginx/conf.d/ /var/cache/nginx/ /var/run/

USER nonroot

# # Containers run nginx with global directives and daemon off
ENTRYPOINT ["nginx", "-g", "daemon off;"]
